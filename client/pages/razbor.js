import axios from 'axios';
import Head from 'next/head';
import { useState } from 'react';
import { useSelector } from 'react-redux';
import ChronologyPost from '../components/ChronologyPost';
import PostsFive from '../components/PostsFive';
import PostsThree from '../components/PostsThree';
import PostsTwo from '../components/PostsTwo';
import { postsData } from '../utils/data';

const razbor = ({ data }) => {
  const posts = data
    .map((i) => [Math.random(), i])
    .sort()
    .map((i) => i[1]);
    
  const switchStatus = useSelector((state) => state.switch.status);
  console.log(posts);


  function makeRandomArr(a, b) {
    return Math.random() - 0.5;
  }

  return (
    <div className='container'>
      <Head>
        <title>Разбор</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      {switchStatus ? (
        <main className=' main chronology-container'>
          <div className='chronology-grid '>
            <ChronologyPost posts={posts} start={0} end={6} />
          </div>
        </main>
      ) : (
        <main className='main'>
          <div className='razbor-grid'>
            <PostsTwo posts={posts} start={0} end={2} />
            <PostsTwo posts={posts} start={0} end={2} />
          </div>
          <div className='razbor-second-grid'>
            <PostsThree posts={posts} start={2} end={5} />
            <PostsThree posts={posts} start={2} end={6} four={true} />
            <PostsThree posts={posts} start={6} end={9} />
            <PostsThree posts={posts} start={9} end={13} four={true} />
            <PostsThree posts={posts} start={13} end={16} />
          </div>
        </main>
      )}
    </div>
  );
};

export default razbor;

export async function getServerSideProps({ params }) {
  const res = await axios.get(
    'http://localhost:1337/posts?categories.name=razbor'
  );
  const data = res.data;

  return {
    props: {
      data,
    }, // will be passed to the page component as props
  };
}